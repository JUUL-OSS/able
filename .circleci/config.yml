version: 2

jobs:
  assemble:
    docker:
      - image: circleci/android:api-26-alpha
    steps:
      - checkout
      - restore_cache:
          key: gradle-{{ checksum "settings.gradle" }}-{{ checksum "build.gradle" }}-{{ checksum "core/build.gradle" }}-{{ checksum "processor/build.gradle" }}-{{ checksum "retry/build.gradle" }}-{{ checksum "throw/build.gradle" }}-{{ checksum "timber-logger/build.gradle" }}
      - run:
          name: Android Assemble, Check
          command: >
                     ./gradlew
                     -PdisablePreDex
                     -Pkotlin.incremental=false
                     -Pkotlinter.ignoreFailures=true
                     --max-workers 2
                     --no-daemon
                     --stacktrace
                     assemble check
      - run:
          name: Keyring
          command: mkdir -p ~/.gnupg && echo "$SIGNING_SECRET_KEY_RING" | base64 --decode > ~/.gnupg/secring.gpg
      - run:
          name: Deploy
          command: .circleci/deploy.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "settings.gradle" }}-{{ checksum "build.gradle" }}-{{ checksum "core/build.gradle" }}-{{ checksum "processor/build.gradle" }}-{{ checksum "retry/build.gradle" }}-{{ checksum "throw/build.gradle" }}-{{ checksum "timber-logger/build.gradle" }}

      # Save test results for all modules.
      #
      # Based on the following guide (modified to collect results into subdirectories named per the
      # corresponding module name):
      # https://circleci.com/docs/2.0/collect-test-data/#gradle-junit-test-results
      - run:
          name: Save Test Results
          command: |
            for i in $(find . -type f -regex ".*/build/test-results/.*xml");
            do
                module=$(echo "$i" | sed -E 's/\.\/(.*)\/build\/test-results\/.*xml/\1/')
                destination="./junit/$module"
                mkdir -p "$destination"
                cp "$i" "$destination"
            done
          when: always
      - store_test_results:
          path: junit

      # Save test reports for all modules to single directory. This will recursively copy the test
      # results directories that contain the `index.html` (and supporting assets, such as CSS files)
      # to a subdirectory of `./reports/` (named according to the module name, e.g. `./reports/app/`
      # for `app` module).
      - run:
          name: Save Test Reports
          command: |
            for i in $(find . -type d | grep -E -o '.*\/build\/reports\/tests\/[^/.]*$');
            do
                module=$(echo "$i" | sed -E 's/\.\/([^/.]*)\/build\/reports\/tests\/[^/.]*/\1/')
                destination="./reports/$module/"
                mkdir -p "$destination"
                cp -Rv "$i" "$destination"
            done
      - store_artifacts:
          path: reports
          destination: reports

  code_coverage:
    working_directory: ~/project
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx1024m
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
      TERM: dumb
    steps:
      - checkout
      #- *restore_gradle_cache

      # Run JaCoCo Reports & Upload to codecov
      - run:
          name: Run Code Coverage
          command: |
            ./gradlew jacocoTestReport -PauthToken=$JITPACK_AUTH_TOKEN
            pip install --user codecov && codecov -t  $CODECOV_TOKEN

workflows:
  version: 2

  default:
    jobs:
      - assemble
      - code_coverage
