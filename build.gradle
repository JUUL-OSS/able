buildscript {
    /**
     * Generates version name based on git tag.
     * https://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
     */
    def getVersionName = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    ext.versions = [
        'minSdk': 21,
        'compileSdk': 26,
        'targetSdk': 26,

        'able': getVersionName(),

        'kotlin': '1.2.51',
        'coroutines': '0.24.0',

        'kotlinTestJunit': '1.2.51',
        'mockitoKotlin': '2.0.0-RC1',
        'equalsVerifier': '2.5.2'
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"

        /* [Gradle Android Maven plugin](https://github.com/dcendents/android-maven-gradle-plugin)
         * Provides support for installing to local maven (`~/.m2/repository`).
         */
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    tasks.withType(Test) {
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
            showExceptions true
            showStackTraces true
            showCauses true
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
